"""
Django settings for iplanner project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import dj_database_url
from decouple import Csv, config
from unipath import Path
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


PROJECT_DIR = Path(__file__).parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

DATABASES = {
    'default': dj_database_url.config(
        default=config('DATABASE_URL')
    )
}

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'rest_framework_jwt',
    'iplanner.rest_framework_auth0',
    'iplanner.general',
    'iplanner.profile',
    # 'iplanner.file',
    'iplanner.project',
    'iplanner.survey',
    'iplanner.product',
    'iplanner.page',
    'iplanner.comments',
    'iplanner.task',
    'iplanner.link'



]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'iplanner.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [PROJECT_DIR.child('templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
'debug': DEBUG
        },
    },
]

WSGI_APPLICATION = 'iplanner.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases




# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# REST_FRAMEWORK = {
#     # Use Django's standard `django.contrib.auth` permissions,
#     # or allow read-only access for unauthenticated users.
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
#     ]
# }


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.AllowAny',
        # 'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
        # 'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
       'iplanner.rest_framework_auth0.authentication.Auth0JSONWebTokenAuthentication',
        # 'atest.auth0.authentication.Auth0TokenAuthentication'
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        # 'rest_frame work.authentication.SessionAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
    ),
}




AUTH0 = {
    'CLIENTS': {
        'default': {
            'AUTH0_CLIENT_ID': '3NhjGlJOqEy7TPmyHKZfuLl7eHzULrPZ',
            'AUTH0_CLIENT_SECRET': 'HKQ1NM43Y67BHUrb5NFAnD13_qRkEgY6dtnhvtDStObyyQNkGN64nJ9e6dZ4cgyV',
            # 'AUTH0_CLIENT_SECRET': 'oOWpS-zD2U8kTREVgK3wjQI1S9-us-9WeMdase2AehExVvXkb6ItLqJmle7u2_tl',
                                   'CLIENT_SECRET_BASE64_ENCODED': False,
                                    'AUTH0_ALGORITHM': 'HS256',
                                    'AUTH0_DOMAIN' : 'webplanner.auth0.com',
                                    # 'API_AUDIENCE' : 'http://127.0.0.1:8000/api/',
            'API_AUDIENCE': 'https://webplanner.auth0.com/api/v2/',
}
},

'JWT_AUTH_HEADER_PREFIX': 'bearer',
'AUTHORIZATION_EXTENSION': False,
'USERNAME_FIELD': 'sub',

}

JWT_AUTH = {

'JWT_VERIFY': False,

}

CORS_ORIGIN_ALLOW_ALL = True

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/



STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'static-root')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

MEDIA_ROOT = PROJECT_DIR.parent.child('media')
MEDIA_URL = '/media/'


# STATIC_URL = '/static/'
# STATIC_ROOT = PROJECT_DIR.parent.child('static-root')
#
#
# STATICFILES_DIRS = (
#     PROJECT_DIR.child('static'),
#
# )
#
#
# MEDIA_ROOT = PROJECT_DIR.parent.child('media')
# MEDIA_URL = '/media/'






APPEND_SLASH=False
